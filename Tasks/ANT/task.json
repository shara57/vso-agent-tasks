{
    "id": "3A6A2D63-F2B2-4E93-BCF9-0CBE22F5DC26",
    "name": "Ant",
    "friendlyName": "Ant",
    "description": "Build with Apache Ant",
    "helpMarkDown": "[More Information](http://go.microsoft.com/fwlink/?LinkID=613718)",
    "category": "Build",
    "visibility": [
        "Build",
        "Release"
    ],
    "author": "Microsoft Corporation",
    "version": {
        "Major": 1,
        "Minor": 0,
        "Patch": 33
    },
    "demands": [
        "ant"
    ],
    "minimumAgentVersion": "1.89.0",
    "groups": [
        {
            "name": "junitTestResults",
            "displayName": "JUnit Test Results",
            "isExpanded": true
        },
        {
            "name": "codeCoverage",
            "displayName": "Code Coverage",
            "isExpanded": true
        },
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "instanceNameFormat": "Ant $(options) $(antBuildFile)",
    "inputs": [
        {
            "name": "antBuildFile",
            "type": "filePath",
            "label": "Ant build file",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Relative path from the repository root to the `Ant build file`."
        },
        {
            "name": "options",
            "type": "string",
            "label": "Options",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Provide any options to pass to the Ant command line.  You can provide your own properties (for example, ***-DmyProperty=myPropertyValue***) and also use built-in variables (for example, ***-DcollectionId=$(system.collectionId)***).  Alternatively, the built-in variables are already set as environment variables during the build and can be passed directly (for example, ***-DcollectionIdAsEnvVar=%SYSTEM_COLLECTIONID%***)."
        },
        {
            "name": "targets",
            "type": "string",
            "label": "Target(s)",
            "defaultValue": "",
            "required": false
        },
        {
            "name": "publishJUnitResults",
            "type": "boolean",
            "label": "Publish to VSTS/TFS",
            "required": true,
            "defaultValue": "true",
            "groupName": "junitTestResults",
            "helpMarkDown": "Select this option to publish JUnit Test results produced by the Ant build to VSTS/TFS. Each test result file matching `Test Results Files` will be published as a test run in VSTS/TFS."
        },
        {
            "name": "testResultsFiles",
            "type": "filePath",
            "label": "Test Results Files",
            "defaultValue": "**/TEST-*.xml",
            "required": true,
            "groupName": "junitTestResults",
            "helpMarkDown": "Test results files path.  Wildcards can be used.  For example, `**/TEST-*.xml` for all xml files whose name starts with TEST-.",
            "visibleRule": "publishJUnitResults = true"
        },
        {
            "name": "testRunTitle",
            "type": "string",
            "label": "Test Run Title",
            "defaultValue": "",
            "required": false,
            "groupName": "junitTestResults",
            "helpMarkDown": "Provide a name for the Test Run.",
            "visibleRule": "publishJUnitResults = true"
        },
        {
            "name": "codeCoverageTool",
            "type": "pickList",
            "label": "Code Coverage Tool",
            "required": false,
            "groupName": "codeCoverage",
            "defaultValue": "None",
            "helpMarkDown": "Select the code coverage tool. For on premise agent setup please refer to the more information link below.",
            "options": {
                "None": "None",
                "JaCoCo": "JaCoCo",
                "Cobertura": "Cobertura"
            }
        },
        {
            "name": "classFilesDirectories",
            "type": "string",
            "label": "Class Files Directories",
            "defaultValue": ".",
            "required": true,
            "groupName": "codeCoverage",
            "helpMarkDown": "Comma separated list of relative paths from ant build file to directories containing class files, archive files(jar, war etc.). Code coverage is reported for class files present in the directories. For example: target/classes,target/testClasses.",
            "visibleRule": "codeCoverageTool != None"
        },
        {
            "name": "classFilter",
            "type": "string",
            "label": "Class Inclusion/Exclusion Filters",
            "defaultValue": "",
            "required": false,
            "groupName": "codeCoverage",
            "helpMarkDown": "Comma separated list of filters to include or exclude classes from collecting code coverage. For example: `+:com.*`,`+:org.*`,`-:my.app*.*`.",
            "visibleRule": "codeCoverageTool != None"
        },
        {
            "name": "srcDirectories",
            "type": "string",
            "label": "Source Files Directories",
            "defaultValue": "",
            "required": false,
            "groupName": "codeCoverage",
            "helpMarkDown": "Comma separated list of relative paths from ant build file to source directories. Code coverage reports will use these to highlight source code. For example: src/java,src/Test.",
            "visibleRule": "codeCoverageTool != None"
        },
        {
            "name": "antHomeUserInputPath",
            "type": "string",
            "label": "Set ANT_HOME Path",
            "required": false,
            "groupName": "advanced",
            "defaultValue": "",
            "helpMarkDown": "If set, overrides any existing ANT_HOME environment variable with the given path."
        },
        {
            "name": "javaHomeSelection",
            "type": "radio",
            "label": "Set JAVA_HOME by",
            "required": true,
            "groupName": "advanced",
            "defaultValue": "JDKVersion",
            "helpMarkDown": "Sets JAVA_HOME either by selecting a JDK version that will be discovered during builds or by manually entering a JDK path.",
            "options": {
                "JDKVersion": "JDK Version",
                "Path": "Path"
            }
        },
        {
            "name": "jdkVersion",
            "type": "pickList",
            "label": "JDK Version",
            "required": false,
            "groupName": "advanced",
            "defaultValue": "default",
            "helpMarkDown": "Will attempt to discover the path to the selected JDK version and set JAVA_HOME accordingly.",
            "visibleRule": "javaHomeSelection = JDKVersion",
            "options": {
                "default": "default",
                "1.8": "JDK 8",
                "1.7": "JDK 7",
                "1.6": "JDK 6"
            }
        },
        {
            "name": "jdkUserInputPath",
            "type": "string",
            "label": "JDK Path",
            "required": true,
            "groupName": "advanced",
            "defaultValue": "",
            "helpMarkDown": "Sets JAVA_HOME to the given path.",
            "visibleRule": "javaHomeSelection = Path"
        },
        {
            "name": "jdkArchitecture",
            "type": "pickList",
            "label": "JDK Architecture",
            "defaultValue": "x86",
            "required": false,
            "helpMarkDown": "Optionally supply the architecture (x86, x64) of JDK.",
            "groupName": "advanced",
            "options": {
                "x86": "x86",
                "x64": "x64"
            }
        }
    ],
    "execution": {
        "Node": {
            "target": "anttask.js",
            "argumentFormat": ""
        },
        "PowerShell": {
            "target": "$(currentDirectory)\\ant.ps1",
            "argumentFormat": "",
            "workingDirectory": "$(currentDirectory)",
            "platforms": [
                "windows"
            ]
        }
    }
}